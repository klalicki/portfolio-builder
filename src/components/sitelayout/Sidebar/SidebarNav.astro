---
import type { string } from "astro/zod";
import menuItems from "../../helpers/menuItems";

import { settings } from "../../helpers/settingsHelper";
const menuItemCount = menuItems.length;
---

<style>
  /*  */
  .menu-main {
    position: absolute;
    /* background-color: aquamarine; */
    display: flex;
    padding: 0;
    justify-content: flex-end;
    z-index: 10;
  }
  .menu-main-group {
    position: fixed;
    top: 45px;
    left: 0px;
    right: 0px;
    display: flex;
    flex-direction: column;
    background-color: lightblue;
    overflow: hidden;
    z-index: -10;
    transform: none;
    transition: all 0.3s;
  }
  .menu-submenu {
    display: flex;
    flex-direction: column;
    padding-left: 1rem;
    font-size: 0.75rem;
    gap: 0.25rem;
    overflow: hidden;
    z-index: -100;
  }
  .menu-submenu a {
  }
  .menu-dropdown-button {
    display: none;
  }
  .menu-toggle-button {
  }
  .menu-mobile-hidden {
    transform: translateY(-50px);
    /* height: 0px; */
    opacity: 0;
    pointer-events: none;
    transition: all 0.3s;
  }

  @media screen and (min-width: 768px) {
    .menu-mobile-hidden {
      display: flex;
      opacity: 1;
      pointer-events: all;
      transform: none;
    }
    #menu-toggle {
      display: none;
    }
    .menu-main {
      position: static;
    }
    .menu-main-group {
      position: static;
      overflow: visible;
    }
  }
  /*
    .menu-mobile-hidden {
      display: flex;
      opacity: 1;
      pointer-events: all;
      transform: none;
    }
    #menu-toggle {
      display: none;
    }
    .menu-main button {
      display: inline;
    }
    .menu-main-group {
      display: flex;
      align-items: stretch;
      flex-direction: row;
      gap: 1rem;
      position: static;
    }
    .menu-main {
      justify-content: center;
      position: relative;
      z-index: 100;
    }
    .menu-submenu {
      position: absolute;

      top: 45px;
      display: inline-flex;
      flex-direction: column;
      gap: 1rem;
      background-color: lightblue;
      padding: 0.5rem;
      transition: all 0.3s;
    }
    .menu-submenu a {
      width: max-content;
    }
    .dropdown-group {
      position: relative;
      display: flex;
      
    }
    .dropdown-button-wrapper {
     
      display: flex;
    }
    .dropdown-button-wrapper a {
      align-self: center;
      padding: 3px;
    }
    .menu-dropdown-button {
      min-width: 30px;
    }
    .dropdown-group-right .menu-submenu {
      right: 0;
    }
    .submenu-hidden {
      transform: translateY(-50px);
      height: 0px;
      opacity: 0;
      pointer-events: none;
      transition: all 0.3s;
    }
  } */
</style>

<nav class="menu-main">
  <button id="menu-toggle">Menu</button>

  <div class="menu-main-group menu-mobile-hidden">
    {
      menuItems.map((item, index) => {
        const isRightSide = index * 2 > menuItemCount;
        if (item.subItems.length > 0) {
          return (
            <>
              <div
                class:list={[
                  "dropdown-group",
                  isRightSide && "dropdown-group-right",
                ]}
              >
                <div class="dropdown-button-wrapper">
                  <a href={item.url} data-menu-id={item.groupID}>
                    {item.title}
                  </a>
                </div>

                <div class="menu-submenu submenu-hidden" id={item.groupID}>
                  {item.subItems.map(
                    (subItem: { url: string; title: string }) => {
                      return <a href={subItem.url}>{subItem.title}</a>;
                    }
                  )}
                </div>
              </div>
            </>
          );
        } else {
          return <a href={item.url}>{item.title}</a>;
        }
      })
    }
  </div>
</nav>
