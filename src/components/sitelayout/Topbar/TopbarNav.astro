---
import type { string } from "astro/zod";
import menuItems from "../../helpers/menuItems";

import settings from "../../helpers/settingsHelper";
const menuItemCount=menuItems.length;
---

<style>
  /*  */
  .menu-main {
    height: 45px;
    position: fixed;
    left: 0px;
    right: 0px;
    top:0px;
    background-color: aquamarine;
    display: flex;
    padding:0;
justify-content: flex-end;  }
  .menu-main-group {
    position: fixed;
    top: 45px;
    left: 0px;
    right: 0px;
    display: flex;
    flex-direction: column;
    background-color: lightblue;
    z-index: 400;
  }
  .menu-submenu {
    display: flex;
    flex-direction: column;
    padding-left: 1rem;
    font-size: 0.75rem;
    gap: 0.25rem;
  }
  .menu-dropdown-button {
    display: none;
  }
  .menu-toggle-button{

  }
  .menu-mobile-hidden{
    display: none;
  }

  @media screen and (min-width: 600px) {
    .menu-mobile-hidden{
      display: flex;
    }
    #menu-toggle{
      display: none;
    }
    .menu-main button 
    {
      display: inline;
    }
    .menu-main-group {
      display: flex;
      flex-direction: row;
      gap: 1rem;
      position: static;
    }
    .menu-main{
      justify-content: center;
      position: relative;
      z-index: 100;
    }
    .menu-submenu {

      position: absolute;
 
      top: 45px;
      display: inline-flex;
      flex-direction: column;
      gap: 1rem;
      background-color: lightblue;
      padding: .5rem;
      transition: all .2s;
      z-index: -10;
    }
    .menu-submenu a{
      width:max-content;
    }
    .dropdown-group{
      position: relative;
    }
    .dropdown-group-right .menu-submenu{
      right:0;

    }
    .submenu-hidden {
      /* transform:translateY(-50px); */
      height: 0px;
      opacity:0;
      pointer-events: none;
      transition:all .2s;
    }
  }
</style>

<script>
  const buttons = document.querySelectorAll(".menu-dropdown-button");
  // alert(buttons.length);
  const hideAllMenus = ()=>{
    document.querySelectorAll(".menu-submenu").forEach((submenu) => {
        // console.log(submenu);
        submenu.classList.toggle("submenu-hidden", true);
      });
  }
  buttons.forEach((item) => {
    item.addEventListener("click", () => {
      const menuID = item.getAttribute("data-menu-id") || "";
      const isInitiallyHidden = document
        .getElementById(menuID)
        ?.classList.contains("submenu-hidden");
      hideAllMenus();
      document
        .getElementById(menuID)
        ?.classList.toggle("submenu-hidden", !isInitiallyHidden);
    });
  });


document.querySelector('#menu-toggle')?.addEventListener('click',()=>{
  document.querySelector('.menu-main-group')?.classList.toggle('menu-mobile-hidden')
})

</script>

<nav class="menu-main">
  <button id="menu-toggle">Menu</button>

<div class="menu-main-group menu-mobile-hidden">
    {
      
      menuItems.map((item,index) => {
        const isRightSide= ((index*2)> menuItemCount);
        if (item.subItems.length > 0) {
          return (
            <>
              <div class:list={["dropdown-group",isRightSide&&'dropdown-group-right']}>
                <div>
                  <a href={item.url}>{item.title}</a>
                  <button
                    class="menu-dropdown-button"
                    data-menu-id={item.groupID}
                    aria-controls={item.groupID}
                  >
                    E
                  </button>
                </div>

                <div class="menu-submenu submenu-hidden" id={item.groupID}>
                  {item.subItems.map((subItem:{url:string,title:string}) => {
                    return <a href={subItem.url}>{subItem.title}</a>;
                  })}
                </div>
              </div>
            </>
          );
        } else {
          return <a href={item.url}>{item.title}</a>;
        }
      })
    }
  </div>
</nav>

<!-- 
  code to render submenu- add once i figure out an accessible dropdown
 
 -->
