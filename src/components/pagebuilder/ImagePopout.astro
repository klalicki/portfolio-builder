---
const { props } = Astro;
const imagePath = "../../assets/images" + props.image;
import Image from "astro/components/Image.astro";
import { settings } from "../helpers/settingsHelper";
import { getImage } from "astro:assets";
import "glightbox/dist/css/glightbox.min.css";

let imageSrc = "";
let imageSrcSet = "";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "./../../**/*.{jpeg,jpg,png,gif}"
);
console.log(images);

if (!images[imagePath]) {
}
if (images && images[imagePath]) {
  const fancyImage = await getImage({
    src: images[imagePath](),
    widths: [512, 1024, 2048, 4096],
    format: "webp",
  });
  console.log(fancyImage.srcSet.values[0]);
  imageSrc = fancyImage.src;
  imageSrcSet = fancyImage.srcSet.attribute;
}
---

<script>
  import GLightbox from "glightbox";
  const glb = GLightbox({});
  document.addEventListener("astro:page-load", () => {
    // This only runs once.
    glb.reload();
  });
</script>
<style>
  .image-popout-container {
    transition: 0.5s all;
  }
  .image-popout-expanded {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    max-width: 100vw;
    max-height: 100vh;
    z-index: 1000;
    padding: 2rem;
    background-color: rgba(0, 0, 0, 0.7);
    transition: all 0.5s;
  }
  .image-popout-expanded .image-popout-img {
    object-fit: contain;
    position: relative;
    width: 100%;
    height: 100%;
  }
</style>

<figure class="image-popout-container popoout-collapsed">
  <a
    href={imageSrc}
    data-sizes="(max-width: 512px) 512px, (max-width: 1024px) 1024px, (max-width: 2048px) 2048px, 4096px"
    data-srcset={imageSrcSet}
    class="glightbox"
  >
    <Image
      class="image-popout-img"
      src={images[imagePath]()}
      alt={props.altText}
      format="webp"
      width={settings.pageArea.images.optimizationWidth}
    /></a
  >
  {props.caption && <figcaption>{props.caption}</figcaption>}
</figure>
