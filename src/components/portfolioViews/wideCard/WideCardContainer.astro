---
const { props } = Astro;
import { settings } from "../../helpers/settingsHelper";
const cardSettings = settings.portfolioLayouts.card;
import { fontRules } from "../../helpers/fontRuleBuilder";
// @ts-ignore
const rules = fontRules(settings.portfolioLayouts.typography);
import { formatCssRules } from "../../helpers/formatCssRules";

const cardRules = formatCssRules({
  containerPadding: settings.portfolioLayouts.container.padding,
  containerGap: settings.portfolioLayouts.container.gap,
  containerWidth: settings.portfolioLayouts.container.width,

  minCardWidth: cardSettings.card.minWidth + "px",
  cardBorderRadius: cardSettings.card.borderRadius,
  cardPadding: cardSettings.card.padding,
  textAreaPadding: cardSettings.card.textPadding,
  cardGap: cardSettings.card.cardGap,
  cardBGColor: cardSettings.card.bgColor,
  cardHoverColor: cardSettings.card.hoverColor,

  imgAspectRatio: cardSettings.image.aspectRatio,
  imgBorderRadius: cardSettings.image.borderRadius,

  ...rules,
});
---

<style>
  .wide-card-container {
    display: flex;
    flex-direction: column;
    gap: 0;
    padding: var(--containerPadding);
    max-width: var(--containerWidth);
  }
</style>

<div
  id={props.containerId}
  class:list={["wide-card-container", props.addClass]}
  style={cardRules}
>
  <slot />
</div>
