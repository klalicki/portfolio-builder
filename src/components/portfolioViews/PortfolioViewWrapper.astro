---
import { getCollection } from "astro:content";
const { props } = Astro;
// console.log('layout:',props.portfolioLayout)
const allProjects = await getCollection("projects");
import CardContainer from "./card/CardContainer.astro";
import CardItem from "./card/CardItem.astro";
import TileContainer from "./tile/TileContainer.astro";
import TileItem from "./tile/TileItem.astro";
import SBSContainer from "./sideBySide/SBSContainer.astro";
import SBSItem from "./sideBySide/SBSItem.astro";
import CoolTileContainer from "./coolTile/CoolTileContainer.astro";
import CoolTileItem from "./coolTile/CoolTileItem.astro";

const componentMappings = {
  cards: { Container: CardContainer, Item: CardItem },
  tiles: { Container: TileContainer, Item: TileItem },
  sbs: { Container: SBSContainer, Item: SBSItem },
  coolTiles: { Container: CoolTileContainer, Item: CoolTileItem },
};

let projectList: {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: any;
}[] = [];

const portfolioGroups = await getCollection("portfolioGroups");
// console.log(portfolioGroups);
// console.log(props);
const portfolioGroupId = "section-" + props.projectSource;
const rawProjectSource = portfolioGroups.find((item) => {
  return item.slug === props.projectSource;
});
let projectSource: any = {};
if (!rawProjectSource) {
  projectSource.discriminant = "all";
} else {
  projectSource = rawProjectSource.data.projectSource;
}
// console.log("projectSource", projectSource);

if (projectSource.discriminant === "selected") {
  projectList = projectSource.value.map((slug: string) => {
    return allProjects.find((project) => {
      return project.slug === slug;
    });
  });
} else {
  //@ts-ignore;
  projectList = allProjects;
}
let validType: "cards" | "tiles" | "sbs" | "coolTiles" = "cards";
if (Object.keys(componentMappings).includes(props.portfolioLayout)) {
  validType = props.portfolioLayout;
}

const { Container, Item } = componentMappings[validType];
---

<Container containerId={portfolioGroupId}>
  {
    projectList.map((item, index) => {
      // console.log(item)
      return (
        <Item
          title={item.data.title}
          url={"/projects/" + item.slug}
          thumbnail={item.data.thumbnail || ""}
          index={index}
          accent={item.data.accent}
        />
      );
    })
  }
</Container>
